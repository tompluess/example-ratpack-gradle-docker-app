// The “ratpack” plugin applies the “application” plugin, making it easy to create a standalone application.
// See: http://gradle.org/docs/current/userguide/application_plugin.html
apply plugin: "io.ratpack.ratpack-java"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'com.bmuschko.docker-remote-api'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:1.0.0',
                'com.github.jengelman.gradle.plugins:shadow:1.2.1',
                'com.bmuschko:gradle-docker-plugin:3.0.3',
         'com.kohlschutter.junixsocket:junixsocket-common:2.0.4',
         'com.kohlschutter.junixsocket:junixsocket-native-common:2.0.4'
    }
}

repositories {
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.11'

    compile 'com.kohlschutter.junixsocket:junixsocket-common:2.0.4'
    compile 'com.kohlschutter.junixsocket:junixsocket-native-common:2.0.4'

    // This is a Guice ratpack app
    compile ratpack.dependency("guice")
    runtime 'org.slf4j:slf4j-simple:1.7.10'

}

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException("Must be built with Java 8 or higher")
}


import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/mydockerfile/Dockerfile')
    from 'postman/newman_alpine33'
    maintainer 'Tom Pluess "tom.pluess@skyr.ch"'
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = 'skyr.ch/ratpack'
}

docker {
    url = 'unix:///var/run/docker.sock'
}

// The “ratpack” plugin is IDEA aware.
// It will create a run configuration in IDEA to launch your app in your IDE, with hot reloading.
apply plugin: "idea"

idea {
    project {
        //use JDK 1.8 in idea
        jdkName "1.8"
        languageLevel "1.8"
        ipr {
            withXml { provider ->
                def node = provider.asNode()
                //configure git support for the project in idea
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
            }
        }
    }
}

//some CI config
apply from: file("gradle/ci.gradle")

mainClassName = "ratpack.example.java.MyApp"
